{"version":3,"file":"static/js/514.b9f01ae7.chunk.js","mappings":"gRASMA,GAAO,IAAIC,MAAOC,cAClBC,EAAe,CACnBC,MAAO,GACPC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,KAAK,GACLC,SAAU,UAiHZ,UA9GiB,WAEf,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAST,GAArC,eAAOY,EAAP,KAAeC,EAAf,KAEA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,MAEFC,EAAAA,EAAAA,YAAU,WAGNH,GAAU,SAAAI,GAAI,yBAAUA,GAAV,IAAgBZ,KAAMO,EAAOV,WAAY,IAAKU,EAAOT,WAArD,GACb,GAAC,CAACS,EAAOV,WAAYU,EAAOT,YAEjC,IAAMe,EAAe,SAAAC,GACjB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOhB,EAAf,EAAeA,KACfQ,GAAU,SAAAI,GAAI,yBAAUA,GAAV,cAAiBZ,EAAOgB,GAAxB,GACf,EAEKC,EAAY,mCAAG,WAAOH,GAAP,wEACnBA,EAAMI,iBADa,SAIjBZ,GAAa,GAJI,SAKXa,EAAAA,GAAAA,KAAe,UAAWZ,GALf,OAMjBL,EAASkB,EAAAA,EAAAA,WAAA,UAAkBb,KAC3BD,GAAa,GAPI,gDAUjBe,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAY,cAXK,yDAAH,sDAelB,OACE,gCACGlB,IAAa,wCAEd,kBAAMmB,OAAO,IAAIC,UAAU,mBAAmBC,MAAO,CAAEC,MAAO,SAAWC,SAAUX,EAAnF,WACE,eAAIQ,UAAU,oBAAd,6BAEA,iBAAKA,UAAU,qBAAf,WACE,kBACEI,GAAG,QACH7B,KAAK,QACL8B,KAAK,QACLC,aAAa,WACbf,MAAOT,EAAOX,MACdoC,SAAUnB,EACVY,UAAU,kBAEZ,kBAAOQ,QAAQ,QAAf,+BAGF,iBAAKR,UAAU,qBAAf,WACE,kBACEI,GAAG,aACH7B,KAAK,aACL8B,KAAK,aACLC,aAAa,MACbf,MAAOT,EAAOV,WACdmC,SAAUnB,EACVY,UAAU,kBAEZ,kBAAOQ,QAAQ,aAAf,4BAGF,iBAAKR,UAAU,qBAAf,WACE,kBACEI,GAAG,YACH7B,KAAK,YACL8B,KAAK,YACLC,aAAa,MACbf,MAAOT,EAAOT,UACdkC,SAAUnB,EACVY,UAAU,kBAEZ,kBAAOQ,QAAQ,YAAf,2BAGF,iBAAKR,UAAU,qBAAf,WACE,kBACEI,GAAG,WACH7B,KAAK,WACL8B,KAAMrB,EAAS,WAAa,OAC5BsB,aAAa,mBACbf,MAAOT,EAAOR,SACdiC,SAAUnB,EACVY,UAAU,kBAEZ,kBAAOQ,QAAQ,WAAf,0BAGF,mBAAQH,KAAK,SAASI,QAAS,kBAAMxB,GAAU,SAAAE,GAAI,OAAKA,CAAL,GAApB,EAA/B,qBAIA,SAAC,KAAD,CAAMuB,GAAG,SAASV,UAAU,eAA5B,mCAIA,mBAAQA,UAAU,oCAAoCK,KAAK,SAA3D,sBAGA,eAAGL,UAAU,uBAAb,kBAAuCjC,UAI9C,C","sources":["pages/JonPage/JoinPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authLoginThunk } from 'Redux/auth/auth.thunk';\n\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { publicApi } from '../../http/http';\n\nconst year = new Date().getFullYear();\nconst initialState = {\n  email: '',\n  first_name: '',\n  last_name: '',\n  password: '',\n  name:'',\n  authType: 'signUp'\n};\n\nconst JoinPage = () => {\n\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [values, setValues] = useState(initialState);\n\n  const [isPass, setIsPass] = useState(true);\n\nuseEffect(()=>\n{  \n    //console.log('jfhjfjf')\n    setValues(prev => ({ ...prev, name: values.first_name+ ' '+ values.last_name }));\n    },[values.first_name, values.last_name])\n\nconst handleChange = event => {\n    const { value, name } = event.target;\n    setValues(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    try {\n      setIsLoading(true);\n      await publicApi.post('/signUp', values);\n      dispatch(authLoginThunk(...values));\n      setIsLoading(false);\n      //toast.success('Success!');\n    } catch (e) {\n      console.log(e);\n      toast.error('Some error');\n    }\n  };\n\n  return (\n    <>\n      {isLoading && <p>Loading ...</p>}\n\n      <form action=\"#\" className=\"mt-5 mx-auto p-0\" style={{ width: '450px' }} onSubmit={handleSubmit}>\n        <h1 className=\"h3 mb-3 fw-normal\">Please Sign In</h1>\n\n        <div className=\"form-floating my-4\">\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"username\"\n            value={values.email}\n            onChange={handleChange}\n            className=\"form-control\"\n          />\n          <label htmlFor=\"email\">Email address</label>\n        </div>\n\n        <div className=\"form-floating my-4\">\n          <input\n            id=\"first_name\"\n            name=\"first_name\"\n            type=\"first_name\"\n            autoComplete=\"off\"\n            value={values.first_name}\n            onChange={handleChange}\n            className=\"form-control\"\n          />\n          <label htmlFor=\"first_name\">First Name</label>\n        </div>\n\n        <div className=\"form-floating my-4\">\n          <input\n            id=\"last_name\"\n            name=\"last_name\"\n            type=\"last_name\"\n            autoComplete=\"off\"\n            value={values.last_name}\n            onChange={handleChange}\n            className=\"form-control\"\n          />\n          <label htmlFor=\"last_name\">Last Name</label>\n        </div>\n\n        <div className=\"form-floating my-4\">\n          <input\n            id=\"password\"\n            name=\"password\"\n            type={isPass ? 'password' : 'text'}\n            autoComplete=\"current-password\"\n            value={values.password}\n            onChange={handleChange}\n            className=\"form-control\"\n          />\n          <label htmlFor=\"password\">Password</label>\n        </div>\n\n        <button type=\"button\" onClick={() => setIsPass(prev => !prev)}>\n          toggle\n        </button>\n\n        <Link to=\"/login\" className=\"d-block my-4\">\n          Already has account?\n        </Link>\n\n        <button className=\"w-100 mt-2 btn btn-lg btn-primary\" type=\"submit\">\n          Sign In\n        </button>\n        <p className=\"mt-5 mb-3 text-muted\">Â© {year}</p>\n      </form>\n    </>\n  );\n};\n\nexport default JoinPage;\n"],"names":["year","Date","getFullYear","initialState","email","first_name","last_name","password","name","authType","dispatch","useDispatch","useState","isLoading","setIsLoading","values","setValues","isPass","setIsPass","useEffect","prev","handleChange","event","target","value","handleSubmit","preventDefault","publicApi","authLoginThunk","console","log","toast","action","className","style","width","onSubmit","id","type","autoComplete","onChange","htmlFor","onClick","to"],"sourceRoot":""}