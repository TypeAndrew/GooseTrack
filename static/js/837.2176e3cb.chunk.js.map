{"version":3,"file":"static/js/837.2176e3cb.chunk.js","mappings":"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","sources":["images/icons/plusAvatar.svg","images/icons/userAvatar.svg","components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["var _circle, _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPlusAvatar(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 12,\n    cy: 12,\n    r: 12,\n    fill: \"#3E85F3\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 6.75V17.25\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.75 12H17.25\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlusAvatar);\nexport default __webpack_public_path__ + \"static/media/plusAvatar.f0087676f0974ccbb0019c2098ecbb2b.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUserAvatar(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 48 48\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.2975 39.75C40.4419 34.8131 36.0413 31.2731 30.9056 29.595C33.446 28.0827 35.4196 25.7784 36.5235 23.0358C37.6275 20.2933 37.8006 17.2642 37.0164 14.4138C36.2322 11.5633 34.5339 9.04909 32.1825 7.25721C29.831 5.46533 26.9564 4.49487 24 4.49487C21.0436 4.49487 18.169 5.46533 15.8176 7.25721C13.4661 9.04909 11.7679 11.5633 10.9837 14.4138C10.1994 17.2642 10.3726 20.2933 11.4765 23.0358C12.5804 25.7784 14.5541 28.0827 17.0944 29.595C11.9588 31.2712 7.55814 34.8112 4.70252 39.75C4.5978 39.9207 4.52834 40.1107 4.49824 40.3088C4.46813 40.5068 4.478 40.7088 4.52725 40.903C4.5765 41.0972 4.66415 41.2795 4.785 41.4392C4.90586 41.599 5.05749 41.7329 5.23094 41.8331C5.40439 41.9333 5.59615 41.9977 5.79491 42.0226C5.99367 42.0474 6.19539 42.0323 6.38818 41.9779C6.58098 41.9236 6.76093 41.8311 6.91743 41.7061C7.07393 41.5811 7.20381 41.426 7.29939 41.25C10.8319 35.145 17.0756 31.5 24 31.5C30.9244 31.5 37.1681 35.145 40.7006 41.25C40.7962 41.426 40.9261 41.5811 41.0826 41.7061C41.2391 41.8311 41.4191 41.9236 41.6119 41.9779C41.8046 42.0323 42.0064 42.0474 42.2051 42.0226C42.4039 41.9977 42.5956 41.9333 42.7691 41.8331C42.9425 41.7329 43.0942 41.599 43.215 41.4392C43.3359 41.2795 43.4235 41.0972 43.4728 40.903C43.522 40.7088 43.5319 40.5068 43.5018 40.3088C43.4717 40.1107 43.4022 39.9207 43.2975 39.75ZM13.5 18C13.5 15.9233 14.1158 13.8932 15.2696 12.1665C16.4233 10.4398 18.0632 9.09396 19.9818 8.29924C21.9005 7.50452 24.0117 7.29658 26.0485 7.70173C28.0853 8.10687 29.9562 9.1069 31.4246 10.5754C32.8931 12.0438 33.8931 13.9147 34.2983 15.9515C34.7034 17.9883 34.4955 20.0995 33.7008 22.0182C32.906 23.9368 31.5602 25.5766 29.8335 26.7304C28.1068 27.8842 26.0767 28.5 24 28.5C21.2162 28.497 18.5472 27.3898 16.5787 25.4213C14.6102 23.4528 13.503 20.7838 13.5 18Z\",\n    fill: \"#3E85F3\",\n    fillOpacity: 0.18\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUserAvatar);\nexport default __webpack_public_path__ + \"static/media/userAvatar.fc46eb67621975ed2947fb57a8c8ee40.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  width: 335px;\n  height: 653px;\n  background:var(--primary-bgc-color);\n  border-radius: 16px;\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 920px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1087px;\n    height: 752px;\n  }\n`;\n\nexport const Title = styled.h2`\n    margin-bottom: 4px;\n    font-family: Inter;\n    font-weight: 700;\n    font-size: 18px;\n    line-height: 1.3;\n    color: var(--text-day-color);\n\n  @media screen and (max-width: 767px) {\n    margin-top: 59px;\n    font-size: 14px;\n  }\n  \n  @media screen and (min-width: 768px) {\n    margin-bottom: 8px;\n    \n  }\n`;\n\nexport const Forms = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n`;\n\nexport const InputList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  \n  p {\n    margin-bottom: 8px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    min-height: 458px;\n    justify-content: space-between;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 758px;\n    min-height: 264px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 299px;\n  height: 42px;\n  padding-left: 18px;\n  background: var(--primary-bgc-color);\n  border: var(--border-imput-color);\n  color: var(--primary-text-color);\n  border-radius: 8px;\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  \n  @media screen and (min-width: 768px) {\n    width: 354px;\n    \n  }\n`;\n\nexport const DatePick = styled(DatePicker)`\n  width: 299px;\n  height: 42px;\n  padding-left: 18px;\n  border-radius: 8px;\n  border: var(--border-imput-color);\n  background: var(--primary-bgc-color);\n  color: var(--primary-text-color);\n  background: var(--primary-bgc-color);\n  font-family: 'Inter';\n  font-style: normal;\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 46px;\n   \n  }\n`;\n\nexport const InputFile = styled.input`\n  opacity: 0;\n  height: 0;\n  width: 0;\n  line-height: 0;\n  overflow: hidden;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ImgAvatarDefault = styled.img`\n  text-align: center;\n  width: 39px;\n  height: 37px;\n  \n  \n  \n  @media screen and (min-width: 768px) {\n    margin-top: 20px;\n    margin-bottom: 24px;\n    width: 52px;\n    height: 50px;\n  }\n  @media screen and (min-width: 1280px) {\n\n    margin-top: 20px;\n    margin-bottom: 20px;\n\n  }\n`;\n\nexport const ImgAvatar = styled.img`\n  text-align: center;\n  width: 124px;\n  height: 124px;\n  \n  \n  \n  @media screen and (min-width: 768px) {\n    margin-top: 20px;\n    margin-bottom: 24px;\n    width: 124px;\n    height: 124px;\n  }\n  @media screen and (min-width: 1280px) {\n\n    margin-top: 20px;\n    margin-bottom: 20px;\n\n  }\n`;\n\n\nexport const ImgBtnWrapper = styled.div`\n `;\n\nexport const ImgBtn = styled.img`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 14px;\n  height: 14px;\n  \n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const User = styled.p`\n  margin-bottom: 40px;\n  font-family: Inter;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.2;\n  color: var(--text-user-color);\n  \n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 18px;\n  }\n   `;\n\nexport const ContainerAvatar = styled.div`\n display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 72px;\n  height: 72px;\n  border: 2px solid rgb(62, 133, 243);\n  border-radius: 50%;\n  overflow: hidden;\n\n  @media screen and (max-width: 767px) {\n    position: absolute;\n    top: -36px;\n    left: 132px;\n    background-color: white;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    margin-bottom: 20px;\n    width: 124px;\n    height: 124px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 60px;\n    margin-bottom: 20px;\n    width: 124px;\n    height: 124px;\n  }`;\n\nexport const LabelImg = styled.label`\n  position: absolute;\n    left: 177px;\n    top: 23px;\n  @media screen and (min-width: 768px) {\n    left: 200px;\n    top: 143px;\n  }\n  @media screen and (min-width: 1280px) {\n    left: 400px;\n    top: 167px;\n  }\n`;\n\nexport const LabelBtn = styled.label`\n    display: flex;\n    flex-direction: column;\n    font-family: Inter;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.2;\n    color: var(--text-name-color);\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n    }\n`;\n\nexport const Btn = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0;\n  width: 195px;\n  height: 46px;\n  border-radius: 16px;\n  border: none;\n  cursor: pointer;\n  font-family: 'Inter';\n  font-style: normal;\n  color: white;\n  background: #3E85F3;\n  :hover,\n  :focus {\n    background: #2B78EF;\n    color: rgb(255, 255, 255);\n   }\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n  }\n `;\n\n export const DatePickerWrapper = styled.div`\n  & .react-datepicker {\n    background-color: #3E85F3;\n    color: #FFFFFF;\n    border-radius: 16px;\n  }\n\n  & .react-datepicker .react-datepicker__header {\n    background-color: #3E85F3;\n    color: #FFFFFF;\n    border-radius: 16px 16px 0 0;\n    border-bottom: 1px solid #FFFFFF;\n  }\n\n  & .react-datepicker__navigation-icon {\n    ::before {\n      border-color: #FFFFFF;\n    }\n  }\n\n  & .react-datepicker__current-month {\n    color: #FFFFFF;\n  }\n\n  & .react-datepicker__day {\n    background-color: #3E85F3;\n    color: #FFFFFF;\n    :hover,\n    :focus {\n      background-color: #DCEBF7;\n      color: #3E85F3;\n      border-radius: 24px;\n    }\n  }\n\n  & .react-datepicker__day-name {\n    color: #FFFFFF;\n  }\n\n  & .react-datepicker__day--selected {\n    background-color: #FFFFFF;\n    color: #3E85F3;\n    border-radius: 24px;\n  }\n\n  & .react-datepicker__day--weekend {\n    color: #FFFFFF;\n  }\n\n  & .react-datepicker__day--outside-month {\n    color: #3E85F3;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useAuth } from '../../Redux/auth/useAuth';\nimport { updateInfo, updateAvatar } from '../../Redux/auth/authOperations';\nimport plus from '../../images/icons/plusAvatar.svg';\nimport avatarDefault from '../../images/icons/userAvatar.svg';\nimport serverConnection from '../constants/PARAMS'\nimport {\n  Wrapper,\n  Title,\n  Forms,\n  InputList,\n  Input,\n  DatePick,\n  InputFile,\n  ImgAvatar,\n  ImgAvatarDefault,\n  ImgBtnWrapper,\n  ImgBtn,\n  User,\n  ContainerAvatar,\n  LabelImg,\n  LabelBtn,\n  Btn,\n  DatePickerWrapper,\n} from './UserForm.styled';\nimport { SpinnerGrid } from 'components/Spinner/Grid';\n\n  const UserForm = () => {\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { user } = useAuth();\n\n  const avatar = user.avatarURL;\n  let bearthdate = user.birthday; \n  let formatBearthdate = (bearthdate !== undefined) ? bearthdate.slice(0, 10) : \"\";  \n  const pathAvatar = (avatar?.substr(0, 4) !== \"http\" &&\n                        avatar !== undefined ) ? `${serverConnection}/` + user.avatarURL : \"\"; \n  const pathAvatarFormat = pathAvatar.replace(/\\\\/g, \"/\");\n   \n\n  const [birthday, setBirthday] = useState( '');  \n\n  const [avatarURL, setAvatarURL] = useState( pathAvatarFormat ?? '');\n  const [name, setName] = useState(user.name ?? '');\n  const [skype, setSkype] = useState(user.skype ?? '');\n  const [email, setEmail] = useState(user.email ?? '');\n  const [phone, setPhone] = useState(user.phone ?? '');\n    \n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const { name, value, files } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        return;\n      case 'skype':\n        setSkype(value);\n        return;\n      case 'email':\n        setEmail(value);\n        return;\n      case 'phone':\n        setPhone(value);\n        return;\n      case 'avatarURL':\n        setAvatarURL(files[0]);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n\n    e.preventDefault();\n\n    const newUser = {\n      name,\n      email,\n      phone,\n      skype,\n      birthday,\n      avatarURL,\n    };\n    \n \n    if (avatarURL) {\n      await dispatch(updateAvatar(newUser.avatarURL));\n    }\n    await dispatch(updateInfo(newUser));\n    setIsLoading(false);\n  };\n\n  return (\n     <>{ isLoading ? <SpinnerGrid /> :\n      (<Wrapper>\n        \n        <Forms autoComplete=\"off\" onSubmit={handleSubmit}>\n                \n        <ContainerAvatar>\n            {(avatarURL !== \"\" && pathAvatar !== `${serverConnection}/`)\n              ? <ImgAvatar src={pathAvatarFormat} alt=\"avatar\" /> :\n              <div>\n                <ImgAvatarDefault\n                  src={avatarDefault}\n                  alt=\"avatar\"\n                />  \n              </div>}\n        </ContainerAvatar>\n\n          <LabelImg htmlFor=\"avatar\">\n            <ImgBtnWrapper>\n          <ImgBtn src={plus} alt=\"user\" />\n            </ImgBtnWrapper>\n          <InputFile\n            id=\"avatar\"\n            type=\"file\"\n            onChange={handleChange}\n            accept=\"image/*,.png,.jpg,.gif,.web\"\n            name=\"avatarURL\"\n          />\n        </LabelImg>\n\n        <Title> {user?.name ?? ' '} </Title>\n        <User> User </User>\n\n        <InputList>\n          <LabelBtn htmlFor=\"username\">\n            User Name\n            <Input\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              id=\"name\"\n              onChange={handleChange}\n              placeholder='Enter your name'\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </LabelBtn>\n          <LabelBtn htmlFor=\"phone\">\n            Phone\n            <Input\n              type=\"tel\"\n              name=\"phone\"\n              id=\"phone\"\n              value={phone}\n              onChange={handleChange}\n              placeholder='Enter your phone'\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            ></Input>\n            </LabelBtn>\n            \n          <DatePickerWrapper>\n              <LabelBtn htmlFor=\"birthday\">\n            Birthday\n            <DatePick\n              name=\"birthday\"\n              id=\"date\"\n              value={formatBearthdate}\n              type=\"date\"\n              input={true}\n              selected={birthday.toDate} \n              onChange={setBirthday}\n              dateFormat=\"YYYY-MM-DD\"\n            />\n            </LabelBtn>\n          </DatePickerWrapper>\n\n          <LabelBtn htmlFor=\"skype\">\n            Skype\n            <Input\n              type=\"text\"\n              name=\"skype\"\n              id=\"skype\"\n              placeholder=\"Add a skype number\"\n              value={skype}\n              onChange={handleChange}\n              // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              // required\n            />\n          </LabelBtn>\n\n          <LabelBtn htmlFor=\"email\">\n            Email\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n          </LabelBtn>\n        </InputList>\n\n        <Btn type=\"submit\"> Save changes </Btn>\n      </Forms>\n      </Wrapper>)}\n      </>\n  );\n};\n\nexport default UserForm;\n","import UserForm from \"components/UserForm/UserForm\";\n\nconst AccountPage = () => {\n\n   return (\n    <>\n      <UserForm  />        \n    </>\n  );\n};\n\nexport default AccountPage;"],"names":["Wrapper","styled","Title","Forms","InputList","Input","DatePick","DatePicker","InputFile","ImgAvatarDefault","ImgAvatar","ImgBtnWrapper","ImgBtn","User","ContainerAvatar","LabelImg","LabelBtn","Btn","DatePickerWrapper","useState","isLoading","setIsLoading","user","useAuth","avatar","avatarURL","bearthdate","birthday","formatBearthdate","undefined","slice","pathAvatar","substr","serverConnection","pathAvatarFormat","replace","setBirthday","setAvatarURL","name","setName","skype","setSkype","email","setEmail","phone","setPhone","dispatch","useDispatch","handleChange","evt","target","value","files","handleSubmit","e","preventDefault","newUser","updateAvatar","updateInfo","autoComplete","onSubmit","src","alt","avatarDefault","htmlFor","plus","id","type","onChange","accept","placeholder","pattern","title","required","input","selected","toDate","dateFormat"],"sourceRoot":""}